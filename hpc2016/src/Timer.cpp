//------------------------------------------------------------------------------
/// @file
/// @author   ハル研究所プログラミングコンテスト実行委員会
///
/// @copyright  Copyright (c) 2016 HAL Laboratory, Inc.
/// @attention  このファイルの利用は、同梱のREADMEにある
///             利用条件に従ってください。
//------------------------------------------------------------------------------

#include "Timer.hpp"

namespace hpc {

//------------------------------------------------------------------------------
/// Timer クラスのインスタンスを生成します。
///
/// @note 生成しただけでは計測を行いません。
///       計測を行うには start 関数を呼び出します。
Timer::Timer()
: mTimeBegin(std::clock_t())
, mTimeEnd(std::clock_t())
{
}

//------------------------------------------------------------------------------
/// タイマーの計測を開始します。
void Timer::start()
{
    mTimeBegin = ::std::clock();
}

//------------------------------------------------------------------------------
/// タイマーの計測を開始します。
void Timer::stop()
{
    mTimeEnd = ::std::clock();
}

//------------------------------------------------------------------------------
/// start 関数を呼び出してから stop 関数を呼び出すまでの経過時間を取得します。
///
/// @return start 関数を呼び出してから stop 関数を呼び出すまでの
///         経過時間を秒に変換したもの。
double Timer::elapsedSec()const
{
    return static_cast<double>(mTimeEnd - mTimeBegin) / CLOCKS_PER_SEC;
}

} // namespace
// EOF

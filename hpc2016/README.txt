
   ★　『ハル研究所プログラミングコンテスト2016』へようこそ！　★

         Copyright HAL Laboratory, Inc. All rights reserved.


 この度は『ハル研究所プログラミングコンテスト2016』へのご参加、
 誠にありがとうございます。
 今回の問題は、題して「小惑星群から地球を守れ！」です。
 皆さんのアイディアに富んだ作品をお待ちしています。

------------------------------------------------------------------------
 問題ルール
------------------------------------------------------------------------

 史上最大の小惑星群を発見！地球に衝突する軌道であることが判明しました。
 急いで宇宙船に乗り込み、迫り来るすべての小惑星を
 高エネルギーレーザー砲で消滅させて、地球を守ってください。

 ● 小惑星群について

 　２次元の矩形で表現された宇宙に、円で表現された小惑星が浮かんでいます。

 ● 宇宙船について

 　宇宙船は任意の方向に移動ができます。
 　エネルギーが充填されていれば任意の方向にレーザーを発射できます。
 　レーザーが命中すれば、小惑星を消滅させることができます。
 　宇宙船を体当たりさせることでも、小惑星を消滅させることができます。

 ● １ステージの流れ

 　全ての小惑星の消滅が完了するまでの流れを１ステージと呼びます。
 　ステージ開始時、宇宙船は宇宙のランダムな初期位置にいます。
 　処理は「ターン」と呼ばれる単位で行われます。
 　ターンごとにそのターンでの行動を決定します。

 　行動は次の２種類のいずれかを行うことができます。

 　・移動
 　　指定方向に移動ができます。
 　・レーザー発射
 　　指定方向にレーザーを発射することができます。

 　レーザー発射後は、エネルギー充填のため、しばらくのターンはレーザーを発射することができません。
 　全ての小惑星を消滅させると、そのステージは終了となり、次のステージに進みます。
 　2000ターンが経過しても消滅完了できない時は、強制的にステージ終了。次のステージに進みます。
 　全てのステージでかかったターン数の総和が、最終的な評価となります。

 ● 主要なパラメータ

 　・ステージの大きさは縦横500です。
 　・宇宙船は１ターンに最大2.0の距離を移動することができます。
 　・レーザーのリロードが完了するまで40ターンかかります。

 　詳しいパラメータについては Parameter.hpp を参照してください。

------------------------------------------------------------------------
 Answer.cpp の内容
------------------------------------------------------------------------

 Answer.cpp には、以下の関数が含まれます。

 void Answer::init(const Stage& aStage);
 ステージの初期化関数です。必要に応じて初期化を行ってください。

 Action Answer::getNextAction(const Stage& aStage);
 ターン開始前に呼ばれる関数です。このターンで行う行動を返してください。

 void Answer::finalize(const Stage& aStage);
 ステージの終了時に呼ばれます。
 必要に応じて、ステージの終了処理を行ってください。

------------------------------------------------------------------------
 選考基準
------------------------------------------------------------------------

 ● 総ターン数と処理時間

 　ステージを規定回数繰り返し、ターン数の総和を競います。
 　総ターン数が少ないほど上位となります。
 　総ターン数が同じ場合は、処理時間が短い作品から上位とします。
 　総ターン数も処理時間も同じ場合は、先に応募された作品から上位とします。

 ● 最終スコア

 　応募期間終了後、問題生成に使用する乱数のシード値を変更し、
 　全応募作品の再評価を行います。
 　再評価は４回分実行し、その平均のターン数と実行時間を
 　最終スコアとして、順位を決定します。

 　応募期間中は実行時間を重視し、実行回数を少なめにしていますが、
 　最終的な評価では、より公平を期するためにこのようにしています。
 　総ターン数が同じだった場合の順位付けについては上記と同じです。

 ● 再評価に関する注意点

 　応募時にエラーやタイムアウトにならなかった作品でも、応募期間終了後の
 　再評価によってエラーやタイムアウトになる可能性があります。
 　手元でいくつかの乱数シードを試すなど、安定した作品を目指すことを
 　おすすめします。
 　詳しくは「補足」を参照してください。

------------------------------------------------------------------------
 問題パッケージの内容（抜粋）
------------------------------------------------------------------------

 ・README.txt         はじめにお読みください
 ・src/Answer.cpp     応募作品サンプル
 ・HPC2016.sln        Visual Studio 2013用ソリューションファイル
 ・HPC2016.vcxproj    Visual Studio 2013用プロジェクトファイル
 ・HPC2016.xcodeproj  Xcode用プロジェクト
 ・Makefile           GNU Make用Makefile
 ・viewer             ビューア

 　上記以外に、チェックプログラムのソースファイルもあります。
 　ビューアについては、後述の「ビューア」をお読みください。

 【ご注意】
 ・問題パッケージに含まれるファイルやツールを、プロコン参加目的
 　以外で使用すること、および再配布することを禁じます。

 ・問題パッケージに含まれるファイルやツールを使用したことによって
 　生じる損害について、ハル研究所は一切の責任を負わないものとします。

 ・ソースファイルの文字コードはUTF-8（BOMあり）、改行コードはLFです。
 　ただし、その他のファイル（Makefileやviewerフォルダ内のファイルなど）
 　については、UTF-8（BOMなし）を使用しています。

------------------------------------------------------------------------
 チェック方法
------------------------------------------------------------------------

 問題パッケージに含まれるチェックプログラムのソースファイルを
 お持ちの環境でコンパイルして実行してください。
 実行すると、実装した関数が正しいかどうかチェックし、正しければ
 スコアを表示します。

 本番の評価時は、DEBUGが定義されずにコンパイルされます。
 お持ちの環境でのみ実行したいコードは、DEBUG定義で括ってください。

------------------------------------------------------------------------
 ビューア
------------------------------------------------------------------------

 問題パッケージには、作品の挙動を確認できるビューアも含まれています。
 ビューアはwebブラウザで動作し、チェックプログラムから出力される
 JSONファイルを読み込むことで動作させることができます。

 チェックプログラムからJSONファイルを出力するためには、
 コマンドプロンプトや端末などのコンソールから -j オプションをつけて
 プログラムを実行し、実行結果をファイルにリダイレクトします。

 下の例は、JSONファイルを output.json に出力しています。
 　./hpc2016 -j > output.json

 またビューアでは、以下のライブラリを利用しています。
 　vue.js

------------------------------------------------------------------------
 動作確認済み環境
------------------------------------------------------------------------

 ● チェックプログラム

 　Visual Studio 2013 (HPC2016.sln, HPC2016.vcxproj を使用)
 　Xcode 8.0          (HPC2016.xcodeproj を使用)
 　GNU-CC 4.9.4       (Makefile を使用)

 ● ビューア

 　Windows 10 / Edge 20.10240.16384.0 / Chrome 53.0.2785.116
 　Mac OS X v10.11 / Safari 10
 　※上記以外のブラウザでは正しく動作しない場合があります。
 　※Safariでは動作が遅くなる場合があります。

------------------------------------------------------------------------
 応募していただくもの
------------------------------------------------------------------------

 応募していただくのは、Answer.cpp またはこれに相当するソースコードです。
 ログインしてマイページの「応募する」で、テキストボックスに
 ソースコードとコメント（任意入力、64文字まで）を入力して送信してください。

------------------------------------------------------------------------
 作品規定
------------------------------------------------------------------------

 ・オリジナルのプログラムに限ります。

 ・使用可能な言語はC++です。※C++11が使えます。
 　ただし、以下の機能は使用できません。

 　・インラインアセンブラ
 　・例外(try,catch,throw等)

 ・標準ライブラリが使えます。
 　適宜、必要なファイルをインクルードして使用してください。

 ・マルチスレッド、マルチプロセスは禁止とします。

 ・#pragma は使用できません。

 ・巨大な応募作品はエラーとなることがあります。

 ・問題パッケージでは制限時間はありませんが、評価環境での
 　制限時間は60秒です。
 　ただし、応募期間終了後の再評価は４回分実行するため、
 　制限時間も240秒となります。

 ・応募前に必ずPC上で実行して、チェックが通ることを確認してください。

 ・特定のステージに依存したチューニングを行うことを禁止します。
 　例えば、X番目のステージの時は、あらかじめ用意した配列に基づいて
 　行動を決定するというような処理は禁止とします。

 ・応募作品のチェックはハル研究所オリジナルの評価環境で行いますが、
 　問題パッケージに含まれるものと同一のチェックプログラムでの
 　チェックとなります。
 　ただし、PC上と評価環境で実行結果が変わる場合があります。

 ・応募作品は応募時に自動チェックされますが、後ほど実行委員会が
 　直接チェックする場合があります。たとえチェックが通っていても、
 　不適切と認められる場合は無効と判定されることがありますので
 　ご了承ください。

------------------------------------------------------------------------
 補足
------------------------------------------------------------------------

 ・Answer.cpp の各関数の引数のオブジェクトの const をキャスト等で外す
 　行為を禁止します。

 ・上記のようなキャスト等をせずに合法的にアクセスできる
 　メンバ関数には、自由にアクセスして構いません。

 ・getNextAction 関数の返す Action 型のインスタンスの値について、
 　以下の場合は実行時エラーとなります。

 　・メンバ変数 mType の表す列挙型の値が ActionType_Move,
 　　ActionType_Shoot のいずれでもない場合。
 　・メンバ変数 mTargetShootPos, mTargetMovePos
 　　の中の実数値が NaN または ±Inf である場合。

 ・使用するコンパイラの挙動により、PC上と評価環境で実行結果が
 　変わる場合があります。
 　実行委員会では例えば、未初期化変数における初期値の違いや、
 　関数に渡す引数の評価順序の違い、浮動小数の計算に伴う
 　誤差によって結果が変わる現象を確認しています。

 ・乱数のシードは、問題パッケージ内のファイル RandomSeed.cpp に
 　含まれる DefaultSeedX, DefaultSeedY, DefaultSeedZ, DefaultSeedW
 　の４つの整数値から決定され、これらを変更することで、プログラムが
 　いろいろなシードの値で動作するかどうかを確かめることが可能です。

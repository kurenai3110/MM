
   ★　『ハル研究所プログラミングコンテスト2017』へようこそ！　★

         Copyright HAL Laboratory, Inc. All rights reserved.


 この度は『ハル研究所プログラミングコンテスト2017』へのご参加、
 誠にありがとうございます。
 今回の問題は、題して「UFOのお手伝い」です。
 皆さんのアイディアに富んだ作品をお待ちしています。

------------------------------------------------------------------------
 問題とルール
------------------------------------------------------------------------

 あるのどかな町で、働き者のUFOたちが、今日もあちこちでオレンジの箱を運んでいます。
 UFOたちが効率よく手分けして運べるよう、あなたの知恵を貸してください。

 ● UFOについて

 　・UFOは円で表現されていて、「小型UFO」が8体、「大型UFO」が2体で、全部で10体います。
 　・各UFOは任意の方向に移動ができ、それぞれ箱を積むことができます。
 　・小型UFOは速く動くことができ、大型UFOはたくさんの箱を積むことができます。
 　・家とUFOが重なった時に、UFOは家に箱を配達することができます。
 　・農場とUFOが重なった時に、UFOは農場から箱を積むことができます。

 ● 家について

 　2次元の矩形で表現されたステージに、円で表現された家が配置されています。
 　ほとんどの家はまとまって配置されていて、街を形成しています。
 　一方で、街から離れたところにある家もあります。

 ● 農場について

 　ステージの中心には、円で表現された農場が配置されています。

 ● 箱の受け渡しについて

 　2つのUFOが重なっているとき、箱の受け渡しをすることができます。

 ● 1ステージの流れ

 　全ての家に配達が完了するまでの流れを1ステージと呼びます。
 　ステージ開始時、各UFOは農場の位置にいます。
 　処理は「ターン」と呼ばれる単位で行われます。
 　ターンは「受け渡しフェーズ」と「移動フェーズ」の2つのフェーズに分かれています。

 　受け渡しフェーズでは次の3種類のいずれかの行動を行うことができます。

 　・箱の積み込み
 　　UFOが農場と重なっているときに可能な行動です。
 　　農場から積載限界まで箱を積み込みます。
 　・箱の受け渡し
 　　UFOが他のUFOと重なっているときに可能な行動です。
 　　もう一方のUFOに対して、持っている箱を全部渡します。
 　　積載限界を超えた場合は、できる限り多くの箱を渡します。
 　・箱の配達
 　　UFOが家と重なっているときに可能な行動です。
 　　家に箱を配達し、積載量が1減ります。

 　受け渡しフェーズが終わると移動フェーズが始まります。
 　移動フェーズでは次の行動を行うことができます。

 　・移動
 　　指定方向に向かって移動します。

 　移動フェーズが終わると、１ターン終了です。

 　全ての家に配達すると、そのステージは終了となり、次のステージに進みます。
 　2000ターンが経過しても配達完了できない時は、強制的にステージ終了。次のステージに進みます。
 　全てのステージでかかったターン数の総和が、最終的な評価となります。

------------------------------------------------------------------------
 主要なパラメータ
------------------------------------------------------------------------

 ・ステージの大きさは縦横750です。
 ・UFOの数は、小型UFOが8体、大型UFOが2体です。
 ・1ターンに移動できる最大距離は、小型UFOが12、大型UFOが5です。
 ・箱の積載限界は、小型UFOが5個、大型UFOが40個です。
 ・農場には無限に箱があります。

 詳しいパラメータについては Parameter.hpp を参照してください。

------------------------------------------------------------------------
 Answer.cpp の内容
------------------------------------------------------------------------

 Answer.cpp には、以下の関数が含まれます。

 void Answer::init(const Stage& aStage)
 ステージの初期化関数です。必要に応じて初期化を行ってください。

 void Answer::moveItems(const Stage& aStage, Actions& aActions)
 受け渡しフェーズに呼ばれる関数です。このフェーズで行う行動をaActionsに格納してください。

 void Answer::moveUFOs(const Stage& aStage, TargetPositions& aTargetPositions)
 移動フェーズに呼ばれる関数です。このフェーズで行う行動をaTargetPositionsに格納してください。

 void Answer::finalize(const Stage& aStage)
 ステージの終了時に呼ばれます。必要に応じて、ステージの終了処理を行ってください。

------------------------------------------------------------------------
 選考基準
------------------------------------------------------------------------

 ● 総ターン数と処理時間

 　ステージを規定回数繰り返し、ターン数の総和を競います。
 　総ターン数が少ないほど上位となります。
 　総ターン数が同じ場合は、処理時間が短い作品から上位とします。
 　総ターン数も処理時間も同じ場合は、先に応募された作品から上位とします。

 ● サーバの評価環境について

 　サーバの評価環境は、配布パッケージと基本的に同一です。
 　ただし、乱数のシード値は配布パッケージと異なるものが使用されます。

 　また、手元でエラーやタイムアウトにならない作品でも、
 　サーバの評価環境ではエラーやタイムアウトになる可能性があります。
 　手元でいくつかの乱数シードを試すなど、安定した作品を目指すことをおすすめします。
 　詳しくは「補足」を参照してください。

------------------------------------------------------------------------
 問題パッケージの内容（抜粋）
------------------------------------------------------------------------

 ・README.txt         はじめにお読みください
 ・src/Answer.cpp     応募作品サンプル
 ・HPC2017.sln        Visual Studio 2015用ソリューションファイル
 ・HPC2017.vcxproj    Visual Studio 2015用プロジェクトファイル
 ・HPC2017.xcodeproj  Xcode用プロジェクト
 ・Makefile           GNU Make用Makefile
 ・viewer             ビューア

 　上記以外に、チェックプログラムのソースファイルもあります。
 　ビューアについては、後述の「ビューア」をお読みください。

 【ご注意】
 ・問題パッケージに含まれるファイルやツールを、プロコン参加目的
 　以外で使用すること、および再配布することを禁じます。

 ・問題パッケージに含まれるファイルやツールを使用したことによって
 　生じる損害について、ハル研究所は一切の責任を負わないものとします。

 ・ソースファイルの文字コードはUTF-8（BOMあり）、改行コードはLFです。
 　ただし、その他のファイル（Makefileやviewerフォルダ内のファイルなど）
 　については、UTF-8（BOMなし）を使用しています。

------------------------------------------------------------------------
 チェック方法
------------------------------------------------------------------------

 問題パッケージに含まれるチェックプログラムのソースファイルを
 お持ちの環境でコンパイルして実行してください。
 実行すると、実装した関数が正しいかどうかチェックし、正しければ
 スコアを表示します。

 本番の評価時は、LOCALが定義されずにコンパイルされます。
 お持ちの環境でのみ実行したいコードは、LOCAL定義で括ってください。

------------------------------------------------------------------------
 ビューア
------------------------------------------------------------------------

 問題パッケージには、作品の挙動を確認できるビューアも含まれています。
 ビューアはWebブラウザで動作し、チェックプログラムから出力される
 JSONファイルを読み込むことで動作させることができます。

 チェックプログラムからJSONファイルを出力するためには、
 コマンドプロンプトや端末などのコンソールから -j オプションをつけて
 プログラムを実行し、実行結果をファイルにリダイレクトします。

 下の例は、JSONファイルを output.json に出力しています。
 　./hpc2017 -j > output.json

 またビューアでは、以下のライブラリを利用しています。
 　vue.js

------------------------------------------------------------------------
 動作確認済み環境
------------------------------------------------------------------------

 ● チェックプログラム

 　Visual Studio 2015 (HPC2017.sln, HPC2017.vcxproj を使用)
 　Xcode 8.0          (HPC2017.xcodeproj を使用)
 　GNU-CC 4.9.4       (Makefile を使用)

 ● ビューア

 　Windows 10 / Edge 20.10240.16384.0 / Chrome 53.0.2785.116
 　Mac OS X v10.11 / Safari 10
 　※上記以外のブラウザでは正しく動作しない場合があります。
 　※Safariでは動作が遅くなる場合があります。

------------------------------------------------------------------------
 応募していただくもの
------------------------------------------------------------------------

 応募していただくのは、Answer.cpp またはこれに相当するソースコードです。
 ログインしてマイページの「応募作品」で、テキストボックスに
 ソースコードとコメント（任意入力、64文字まで）を入力して送信してください。

------------------------------------------------------------------------
 作品規定
------------------------------------------------------------------------

 ・オリジナルのプログラムに限ります。

 ・使用可能な言語はC++です。※C++11が使えます。
 　ただし、以下の機能は使用できません。

 　・インラインアセンブラ
 　・例外(try,catch,throw等)

 ・標準ライブラリが使えます。
 　適宜、必要なファイルをインクルードして使用してください。

 ・マルチスレッド、マルチプロセスは禁止とします。

 ・#pragma は使用できません。

 ・巨大な応募作品はエラーとなることがあります。

 ・問題パッケージでは制限時間はありませんが、評価環境での
 　制限時間は60秒です。

 ・応募前に必ずPC上で実行して、チェックが通ることを確認してください。

 ・特定のステージに依存したチューニングを行うことを禁止します。
 　例えば、X番目のステージの時は、あらかじめ用意した配列に基づいて
 　行動を決定するというような処理は禁止とします。

 ・応募作品のチェックはハル研究所オリジナルの評価環境で行いますが、
 　問題パッケージに含まれるものと同一のチェックプログラムでのチェックとなります。
 　ただし、評価環境では別の乱数のシード値で評価が行われますのでご注意ください。

 ・応募作品は応募時に自動チェックされますが、後ほど実行委員会が
 　直接チェックする場合があります。たとえチェックが通っていても、
 　不適切と認められる場合は無効と判定されることがありますので
 　ご了承ください。

------------------------------------------------------------------------
 補足
------------------------------------------------------------------------

 ・Answer.cpp の各関数の引数のオブジェクトの const をキャスト等で外す
 　行為を禁止します。

 ・上記のようなキャスト等をせずに合法的にアクセスできる
 　メンバ関数には、自由にアクセスして構いません。

 ・使用するコンパイラの挙動により、PC上と評価環境で実行結果が
 　変わる場合があります。
 　実行委員会では例えば、未初期化変数における初期値の違いや、
 　関数に渡す引数の評価順序の違い、浮動小数の計算に伴う
 　誤差によって結果が変わる現象を確認しています。

 ・乱数のシードは、問題パッケージ内のファイル RandomSeed.cpp に
 　含まれる DefaultSeedX, DefaultSeedY, DefaultSeedZ, DefaultSeedW
 　の４つの整数値から決定されています。これらを変更することで、
 　プログラムがいろいろなシードの値で動作するかを確認でき、
 　プログラムの安定性をチェックすることができます。
